FFMpeg Poweramp changes and building

#define REDUCED_AUDIO_BUILD
This enables partial build of ffmpeg:
- various video APIs disabled (including structures changes, this makes ffmpeg API not binary compatible)
- some unnecessary static data and calculations are skept (e.g. costables and related, rdft)
- some codec parts are disabled (just opus is left for opus)
- image processing removed

#define REDUCED_TAGS_BUILD
- unnecessary tag parsing is disabled

fft.h
fft.c




Build process.

Poweramp has "overriden" c/S files in jni. Still, .h files can't be overriden this way, thus, they are kept both in jni and should be copied over the ffmpeg tree
FFmpeg configure basically works as intended, except external libraries detection (doesn't work currently, no pkg-config in ndk and/or it seems that crosscompile libs
not necessarily easily configured this way anyway). External library config variables are enabled in per-build config scripts (config.h/config.mak from config-pamp.h/config-pamp.mak).

The fun part is rdft support. If it's disabled in configure, then due to the dct dependency it won't include a lot of codecs, which actually don't use any rdft.
By excluding rdft (and few other modules) via LOCAL_OBJS_TO_REMOVE it's possible to build the reduced working build without rdft.

Costables were previously moved to malloc'ed memory, but now returned static alloc for them, as it doesn't seem to affect the so size (and they are used anyway
in aac/wma).


Os vs O3 + neon tree
- mp3 - benifits from local O3 by realtime .3%
- aac - no dif